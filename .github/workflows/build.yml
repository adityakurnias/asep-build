name: Build Aseprite

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ clang cmake ninja-build \
            libx11-dev libxcursor-dev libxi-dev \
            libxrandr-dev libgl1-mesa-dev libfontconfig1-dev libwebp-dev

      - name: Build Skia
        run: |
          git clone -b aseprite-m124 https://github.com/aseprite/skia.git --depth=1
          cd skia && python3 tools/git-sync-deps
          bin/gn gen out/Release-x64 \
            --args='is_official_build=true skia_use_system_freetype2=false skia_use_system_libpng=false skia_use_system_zlib=false'
          ninja -C out/Release-x64 skia

      - name: Build Aseprite
        run: |
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=$GITHUB_WORKSPACE/skia \
            -DSKIA_LIBRARY_DIR=$GITHUB_WORKSPACE/skia/out/Release-x64 \
            -DSKIA_LIBRARY=$GITHUB_WORKSPACE/skia/out/Release-x64/libskia.a \
            -G Ninja ..
          ninja aseprite

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-linux
          path: build/bin/aseprite

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install dependencies
        run: |
          choco install ninja cmake -y

      - name: Build Skia
        shell: bash
        run: |
          git clone -b aseprite-m124 https://github.com/aseprite/skia.git --depth=1
          cd skia && python3 tools/git-sync-deps
          bin/gn gen out/Release-x64 \
            --args='is_official_build=true target_os="win" target_cpu="x64" skia_use_system_freetype2=false skia_use_system_libpng=false skia_use_system_zlib=false'
          ninja -C out/Release-x64 skia

      - name: Build Aseprite
        run: |
          mkdir build
          cd build
          cmake `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DLAF_BACKEND=skia `
            -DSKIA_DIR=${{ github.workspace }}\skia `
            -DSKIA_LIBRARY_DIR=${{ github.workspace }}\skia\out\Release-x64 `
            -DSKIA_LIBRARY=${{ github.workspace }}\skia\out\Release-x64\skia.lib `
            -G Ninja ..
          ninja aseprite

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-windows
          path: build/bin/aseprite.exe

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: aseprite-linux
          path: release

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: aseprite-windows
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
